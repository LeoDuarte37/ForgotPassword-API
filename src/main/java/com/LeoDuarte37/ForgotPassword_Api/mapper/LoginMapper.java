package com.LeoDuarte37.ForgotPassword_Api.mapper;

import com.LeoDuarte37.ForgotPassword_Api.dto.RegisterLoginDto;
import com.LeoDuarte37.ForgotPassword_Api.dto.SessionLoginDto;
import com.LeoDuarte37.ForgotPassword_Api.enumeration.Role;
import com.LeoDuarte37.ForgotPassword_Api.model.Login;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Component;

/**
 * <h1>LoginMapper</h1>
 * <p>
 *     This class is responsible for generating DTOs to
 *     HTTP responses or entities to operations linked
 *     to the Login class, avoiding code repetition in
 *     the service layer.
 * </p>
 *
 * @author Leonardo
 * @version 1.0
 */
@Component
public class LoginMapper {

    @Autowired
    private PasswordEncoder passwordEncoder;

    /**
     * Returns an entity Login by RegisterLoginDto, for
     * save or update operations.
     *
     * @param registerLoginDto username, password, user and role.
     * @return Login
     */
    public Login toEntity(RegisterLoginDto registerLoginDto) {
        return new Login(
                registerLoginDto.username(),
                passwordEncoder.encode(registerLoginDto.password()),
                registerLoginDto.user(),
                Role.getRoleByKey(registerLoginDto.role())
        );
    }

    /**
     * Returns a DTO from login session generated by
     * successful authentication.
     *
     * @param login login entity.
     * @param token previously generated token.
     * @return SessionLoginDto
     */
    public SessionLoginDto toSession(Login login, String token) {
        return new SessionLoginDto(
                login.getUsername(),
                login.getRole().toString(),
                token
        );
    }
}
